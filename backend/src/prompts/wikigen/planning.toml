# This file defines the complete message structure for the 'planning' task.

# A list of dictionaries representing the conversation turns.
[[messages]]
role = "system"
# Notice no leading newline after """ and `content = ` is aligned.
# This ensures the first line of content is truly the first line.
content = """{% include '_common/persona_story_analyzer.jinja' %}  

Your specific task is to analyze the provided story and output a structured JSON plan.
The plan must include 'arcs' and 'entities'.
You must adhere strictly to the requested JSON format.
"""

[[messages]]
role = "user"
content = """Analyze the following story.

Story Title: {{ story_title }}
Story Content:
---
{{ story_content }}
---

{% if examples %}
To guide you, here are some examples of the required output format:
{% for example in examples %}
---
Example {{ loop.index }}:
Input Story:
{{ example.input_story }}

Expected JSON Plan:
{{ example.expected_plan_json | tojson(indent=2) }}
---
{% endfor %}
{% endif %}

Provide your analysis in a single, valid JSON object.
"""

# Structured data for few-shot examples (optional)
[examples.good_plan_1]
input_story = "The ancient city of Eldoria stood atop Mount Cinder..."
# Store as TOML inline table, will be loaded as Python dict
expected_plan_json = { title = "Example Story 1", arcs = [], entities = [ { name = "Eldoria", type = "LOCATION" } ] }

[examples.good_plan_2]
input_story = "Sir Reginald, the valiant knight, wielded the legendary Blade of Truth."
expected_plan_json = { title = "Example Story 2", arcs = [], entities = [ { name = "Sir Reginald", type = "PERSON" }, { name = "Blade of Truth", type = "OBJECT" } ] }